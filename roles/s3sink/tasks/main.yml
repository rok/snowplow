---

- name: Create required folders
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ snowplow_folder }}"
    - "{{ snowplow_config_folder }}"
    - "{{ snowplow_log_folder }}"
  tags: s3sink

- name: Check if collector is already downloaded
  stat:
    path: "{{ snowplow_folder }}/{{ s3sink_binary }}"
  register: downloaded
  tags: s3sink

- name: Download and unarchive the binary
  unarchive:
    src: "{{ s3sink_url }}"
    dest: "{{ snowplow_folder }}"
    copy: no
    mode: 0700
  when: not downloaded.stat.exists
  tags: s3sink

- name: Create config file
  template:
    src: s3sink.conf.j2
    dest: "{{ snowplow_config_folder }}/s3sink.conf"
    mode: 0700
  tags: s3sink

- name: Create launcher files
  template:
    src: "s3sink.sh.j2"
    dest: "{{ snowplow_folder }}/s3sink.sh"
    mode: 0700
  tags: s3sink

- name: Create supervisor config file
  template:
    src: snowplow_s3sink.conf.j2
    dest: /etc/supervisor/conf.d/snowplow_s3sink.conf
    mode: 0600
  tags: s3sink

- name: Load supervisor configs
  supervisorctl:
    name: snowplow_s3sink
    state: present
  tags: s3sink

- name: Restart services with supervisor
  supervisorctl:
    name: snowplow_s3sink
    state: restarted
  tags: s3sink
